// ============================================================================
// Borrowed from h5bp.com.
// ============================================================================


html {
  box-sizing: border-box;
  color: $color-text;
  font-family: $font-stack-sans;
}


// http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
*,
*:before,
*:after {
  box-sizing: inherit;
}


hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid darken($color-background, 25%);
  margin: 1.5em 0;
  padding: 0;
}


audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}


fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}


// ============================================================================
// Project-specific global/base styles.
// ============================================================================


// Using the three selectors below, we reset some of the properties of many
// common elements to then scope and redefine them inside of
// _scss/modules/_copy-block.scss. This article sums up why itâ€™s a good idea:
// http://cognition.happycog.com/article/expressive-type-for-copy-blocks
h1, h2, h3, h4, h5, h6, p, ul, ol, li, dl, dt, dd, blockquote, pre, figure,
figcaption {font-size:inherit; line-height:1; margin:0; padding:0;}
h1, h2, h3, h4, h5, h6 {font-weight:inherit;}
ul, ol {list-style-type:none;}


a {
  color: $color-link;
  text-decoration: none;

  &:visited {
    color: $color-link-visited;
  }

  &:hover,
  &:focus {
    color: $color-link-hover;
  }
}


figure {
  margin: 0;
}


img, video {
  height: auto;
  max-width: 100%;
}


iframe {
  border: none;
  max-width: 100%;
}


.btn {
  @include btn();
}


.btn-small {
  @include btn($size:'small');
}


.btn-large {
  @include btn($size:'large');
}


.btn-as-link {
  @include btn-as-link();
}


.btn-strip {
  @include btn-strip();
}
